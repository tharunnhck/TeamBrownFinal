{"name": "test_tweet", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=122.0.6261.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF61F0FAD02+56930]\n\t(No symbol) [0x00007FF61F06F602]\n\t(No symbol) [0x00007FF61EF242E5]\n\t(No symbol) [0x00007FF61EF29261]\n\t(No symbol) [0x00007FF61EF2B6EB]\n\t(No symbol) [0x00007FF61EF2B7B0]\n\t(No symbol) [0x00007FF61EF70896]\n\t(No symbol) [0x00007FF61EF6E8AB]\n\t(No symbol) [0x00007FF61EF6C0B4]\n\t(No symbol) [0x00007FF61EF6AE45]\n\t(No symbol) [0x00007FF61EF5F798]\n\t(No symbol) [0x00007FF61EF8BC9A]\n\t(No symbol) [0x00007FF61EF5F09A]\n\t(No symbol) [0x00007FF61EF8BEB0]\n\t(No symbol) [0x00007FF61EFA81E2]\n\t(No symbol) [0x00007FF61EF8BA43]\n\t(No symbol) [0x00007FF61EF5D438]\n\t(No symbol) [0x00007FF61EF5E4D1]\n\tGetHandleVerifier [0x00007FF61F476F8D+3711213]\n\tGetHandleVerifier [0x00007FF61F4D04CD+4077101]\n\tGetHandleVerifier [0x00007FF61F4C865F+4044735]\n\tGetHandleVerifier [0x00007FF61F199736+706710]\n\t(No symbol) [0x00007FF61F07B8DF]\n\t(No symbol) [0x00007FF61F076AC4]\n\t(No symbol) [0x00007FF61F076C1C]\n\t(No symbol) [0x00007FF61F0668D4]\n\tBaseThreadInitThunk [0x00007FFAAB51257D+29]\n\tRtlUserThreadStart [0x00007FFAAB82AA58+40]", "trace": "@allure.severity(allure.severity_level.MINOR)\n    def test_tweet():\n        whatshappening = driver.find_element(By.XPATH,'/html/body/div[1]/div/div/div[2]/main/div/div/div/div[1]/div/a/div[2]/div/div')\n        whatshappening.click()\n    \n        time.sleep(1)\n        postbar = driver.find_element(By.XPATH,'//*[@id=\"layers\"]/div[2]/div/div/div/div/div/div[2]/div[2]/div/div/div/div[3]/div[2]/div[1]/div/div/div/div[1]/div[2]/div/div/div/div/div/div/div/div/div/div/div/label/div[1]/div/div/div/div/div/div[2]/div/div/div/div')\n        list1 = [range(10, 1000)]\n        randomm = random.choice(list1)\n    \n        postbar.send_keys(\"Wassssssssuppppp???\")\n    \n        time.sleep(1)\n        postbutton = driver.find_element(By.XPATH,'//*[@id=\"layers\"]/div[2]/div/div/div/div/div/div[2]/div[2]/div/div/div/div[3]/div[2]/div[1]/div/div/div/div[2]/div[2]/div/div/div/div[4]/div')\n>       postbutton.click()\n\nmain.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023BCEB82270>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF61F0668D4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAAB51257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAAB82AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=122.0.6261.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF61F0FAD02+56930]\nE       \t(No symbol) [0x00007FF61F06F602]\nE       \t(No symbol) [0x00007FF61EF242E5]\nE       \t(No symbol) [0x00007FF61EF29261]\nE       \t(No symbol) [0x00007FF61EF2B6EB]\nE       \t(No symbol) [0x00007FF61EF2B7B0]\nE       \t(No symbol) [0x00007FF61EF70896]\nE       \t(No symbol) [0x00007FF61EF6E8AB]\nE       \t(No symbol) [0x00007FF61EF6C0B4]\nE       \t(No symbol) [0x00007FF61EF6AE45]\nE       \t(No symbol) [0x00007FF61EF5F798]\nE       \t(No symbol) [0x00007FF61EF8BC9A]\nE       \t(No symbol) [0x00007FF61EF5F09A]\nE       \t(No symbol) [0x00007FF61EF8BEB0]\nE       \t(No symbol) [0x00007FF61EFA81E2]\nE       \t(No symbol) [0x00007FF61EF8BA43]\nE       \t(No symbol) [0x00007FF61EF5D438]\nE       \t(No symbol) [0x00007FF61EF5E4D1]\nE       \tGetHandleVerifier [0x00007FF61F476F8D+3711213]\nE       \tGetHandleVerifier [0x00007FF61F4D04CD+4077101]\nE       \tGetHandleVerifier [0x00007FF61F4C865F+4044735]\nE       \tGetHandleVerifier [0x00007FF61F199736+706710]\nE       \t(No symbol) [0x00007FF61F07B8DF]\nE       \t(No symbol) [0x00007FF61F076AC4]\nE       \t(No symbol) [0x00007FF61F076C1C]\nE       \t(No symbol) [0x00007FF61F0668D4]\nE       \tBaseThreadInitThunk [0x00007FFAAB51257D+29]\nE       \tRtlUserThreadStart [0x00007FFAAB82AA58+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "start": 1710401036621, "stop": 1710401039893, "uuid": "ccb85cce-e7e1-410b-abef-d2d8f6357d16", "historyId": "11a03a6df9db689ad8b5929c7648fa55", "testCaseId": "11a03a6df9db689ad8b5929c7648fa55", "fullName": "main#test_tweet", "labels": [{"name": "severity", "value": "minor"}, {"name": "suite", "value": "main"}, {"name": "host", "value": "CSLAB1-25"}, {"name": "thread", "value": "19880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "main"}]}